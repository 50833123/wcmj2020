<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數</p>
<h2>開啟動態網站</h2>
<p>Y:\&gt;cd tmp</p>
<p>Y:\tmp&gt;cd wcmj2020</p>
<p>Y:\tmp\wcmj2020&gt;cd cmsimde</p>
<p>Y:\tmp\wcmj2020\cmsimde&gt;python wsgi.py</p>
<p>關閉 : CTRL+C</p>
<p><img alt="" height="383" src="/images/EUWk9SKUcAAFU3s.jpg" width="261"/></p>
<h3>把內容推上去</h3>
<p><img alt="" height="480" src="/images/n.jpg" width="615"/></p>
<h2>上課筆記</h2>
<p><img alt="" height="701" src="/images/28445.jpg" width="527"/></p>
<p><img alt="" height="395" src="/images/28444.jpg" width="527"/></p>
<p><img alt="" height="934" src="/images/28446.jpg" width="527"/></p>
<h2>繪圖程式</h2>
<p><a href="http://mde.tw/wcmj2020/downloads/MyPaint%E7%AD%86%E5%88%B7%E8%AA%AA%E6%98%8E.pdf" title="Mypaint筆刷說明.pdf">Mypaint筆刷說明.pdf</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gblZFCPOazc" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/4iigGPzdg7s" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9NDuiP17GnA" width="560"></iframe></p>
<h2>大概的上課內容</h2>
<h3>Online education</h3>
<p>線上直播: Youtube + Portable OBS</p>
<p>線上開會:<span> </span><strong><a href="https://meet.google.com"></a><a href="https://meet.google.com" title="https://meet.google.com ">https://meet.google.com</a></strong></p>
<h3>讓手機可以利用電腦熱點上網</h3>
<p><span>採用 </span><a href="https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/" title="https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/">https://www.tp-link.com/us/home-networking/usb-adapter/tl-wn725n/</a></p>
<p><span>將此一 USB Wifi adapter 連接電腦後, 若網路為 IPv4 協定時, 可以透過"設定 -&gt; 網路和網際網路 -&gt; 行動熱點", 選擇開啟並編輯"網路名稱與網路密碼"後, 讓至多 8 台手機透過熱點連線上網.</span></p>
<p><span>但是因為目前 Windows 10 並<a href="https://answers.microsoft.com/en-us/windows/forum/all/support-ipv6-in-mobile-hotspot-network-sharing/8801ea57-c6dc-4c10-afe6-192879a85835">未提供 IPv6 網路協定下的網路熱點功能</a><span>, 因此在純 IPv6 網路協定下無法使用"行動熱點"服務.</span></span></p>
<h3>利用手機鏡頭當作 webcam</h3>
<p>Android: <a href="https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows">https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows</a> <br/>iPhone: <a href="https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/">https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/</a> </p>
<p></p>
<h1>上課內容</h1>
<h2>w1-5</h2>
<h3>使用 CMSiMDE</h3>
<ul style="list-style-type: square;">
<li><span class="js-issue-title"><span>登入 gm 帳號後, 下載 </span><a href="https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH" rel="nofollow">https://drive.google.com/open?id=1SvMKQFViJ0mskt20UhSqkjzckB3noSJH</a><span><span> </span>至 downloads 目錄, 然後以 7zip 解開到 C:\wcmj2020 目錄下</span></span></li>
<li><span class="js-issue-title"><span>其中有 start.bat 與 stop.bat</span></span><span class="js-issue-title"><span></span></span><span class="js-issue-title"><span>start.bat是開啟可攜系統</span></span><span class="js-issue-title"><span></span></span><span class="js-issue-title"><span>stop.bat是關閉<span>可攜系統</span></span></span></li>
<li><span class="js-issue-title"><span><span>登入以個人學號所建立的 github 帳號, 然後建立 wcmj2020 倉儲.</span></span></span></li>
<li>
<p>將遠端的 wcmj2020 以 git clone 取下.</p>
<p>git clone<span> </span><a href="https://github.com/%E5%AD%B8%E8%99%9F/wcmj2020.git">https://github.com/學號/wcmj2020.git</a></p>
</li>
<li><span>git submodule add </span><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a><span><span> </span>cmsimde</span><span></span></li>
<li><span>開啟編輯<span>CMSiMDE網頁:<img alt="" height="467" src="/images/jYfL3VynlT.png" width="830"/></span></span></li>
<li><span>密碼:admin</span></li>
</ul>
<h2>w6-9</h2>
<ul style="list-style-type: square;">
<li><span>學會利用 ShareX 與 OBS 拍攝螢幕操作影片</span></li>
<li><span>重新下載<span> </span><a href="https://drive.google.com/open?id=1xDTDfcHU18ipqZNbOufMkSZqibqNeL2T">wcmj2020_tool.7z</a></span></li>
<li><span>用Youtube + Portable OBS線上直播</span></li>
<li>用 Google Meet 線上上課</li>
<li>利用手機鏡頭當作 webcam:</li>
<li>Android:<span> </span><a href="https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows">https://www.digitalcitizen.life/turn-android-smartphone-webcam-windows</a> <br/>iPhone:<span> </span><a href="https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/">https://www.makeuseof.com/tag/use-your-iphone-as-a-webcam-heres-how-ios/</a></li>
</ul>
<h2>w12-13</h2>
<ul style="list-style-type: square;">
<li><span>安裝 </span><span>google-api-python-client 與 oauth2client</span></li>
<li>
<p>完成 client_secrets.json 設定後, 必須將檔案存在倉儲目錄外部</p>
<p>將 client_secrets.json 轉為 credential_token.dat 的程式</p>
</li>
<li>學會用leo</li>
<li>設定 <span>add_to_blogger 和 edit_to_blogger 按鈕</span><span></span></li>
<li><span>使用Google Blogger</span></li>
<li><span>Google Blogger 中的網誌系統都有獨立 ID, 稱為 blog_id, 而網誌中的每一篇文章也有獨立 ID, </span><span>稱為 post_id</span><span></span></li>
</ul>
<h2>w14</h2>
<ul style="list-style-type: square;">
<li><span>安裝 Python 3.8.3 與 pip</span></li>
<li><span>安裝 Git</span></li>
<li>安裝 CMSiMDE 所需模組</li>
</ul>
<h3>新增 blogger 文章</h3>
<h4>w14_blogger_add_1.py</h4>
<div class="line number1 index0 alt2"><code class="py comments"></code></div>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">'''
用來測試 Google Blogger Python API 新增文章程式
 
pip install google-api-python-client oauth2client
 
'''
 
import sys
from oauth2client import client
from googleapiclient import sample_tools
 
argv = ""
# 認證並建立服務
service, flags = sample_tools.init(
  argv, 'blogger', 'v3', __doc__, './client_secrets.json',
  scope='https://www.googleapis.com/auth/blogger')
 
try:
    users = service.users()
    # 取得使用者 profile 資料
    user = users.get(userId='self').execute()
    print('網誌名稱: %s' % user['displayName'])
    blogs = service.blogs()
    # 取得使用者所建立網誌名稱
    blogs = blogs.listByUser(userId='self').execute()
    for blog in blogs['items']:
        print(blog['name'], blog['url'])
    posts = service.posts()
    # 新增網誌 post 時, 需要 blog id
 
    body = {
    "kind": "blogger#post",
    "id": "123",
    "title": "透過 Python 程式新增網誌文章1",
    "content":"使用 Google Blogger API 可以利用程式新增網誌文章內容1"
    }
     
    insert = posts.insert(blogId='123', body=body)
    posts_doc = insert.execute()
    print(posts_doc)
     
    '''
    # 更新網誌文章時的 body
    body = {
    "kind": "blogger#post",
    "title": "透過 Python 程式修改網誌文章2",
    "content": "使用 Google Blogger API 可以利用程式修改網誌文章內容. http://mde.tw/cd2019"
    }
     
    update = posts.update(blogId="123", postId="456", body=body, publish=True)
    update_doc = update.execute()
    print(update_doc)
    '''
except(client.AccessTokenRefreshError):
    print("error")
</pre>
<p></p>
<h3>編輯 Blogger 文章</h3>
<h4>w14_blogger_edit_1.py</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">'''
用來測試 Google Blogger Python API 編輯文章程式
 
pip install google-api-python-client oauth2client
 
'''
 
import sys
from oauth2client import client
from googleapiclient import sample_tools
 
argv = ""
# 認證並建立服務
service, flags = sample_tools.init(
  argv, 'blogger', 'v3', __doc__, './client_secrets.json',
  scope='https://www.googleapis.com/auth/blogger')
 
try:
    users = service.users()
    # 取得使用者 profile 資料
    user = users.get(userId='self').execute()
    print('網誌名稱: %s' % user['displayName'])
    blogs = service.blogs()
    # 取得使用者所建立網誌名稱
    blogs = blogs.listByUser(userId='self').execute()
    for blog in blogs['items']:
        print(blog['name'], blog['url'])
    posts = service.posts()
    # 新增網誌 post 時, 需要 blog id
 
    '''
    body = {
    "kind": "blogger#post",
    "id": "123",
    "title": "透過 Python 程式新增網誌文章1",
    "content":"使用 Google Blogger API 可以利用程式新增網誌文章內容1"
    }
     
    insert = posts.insert(blogId='123', body=body)
    posts_doc = insert.execute()
    print(posts_doc)
    '''
 
    # 更新網誌文章時的 body
    body = {
    "kind": "blogger#post",
    "title": "透過 Python 程式修改網誌文章2",
    "content": "使用 Google Blogger API 可以利用程式修改網誌文章內容. http://mde.tw/cd2019"
    }
     
    update = posts.update(blogId="123", postId="456", body=body, publish=True)
    update_doc = update.execute()
    print(update_doc)
 
except(client.AccessTokenRefreshError):
    print("error")</pre>
<div class="line number1 index0 alt2"><code class="py comments"></code></div>